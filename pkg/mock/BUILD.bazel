# gazelle:ignore

load("@bazel_gomock//:gomock.bzl", "gomock")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

gomock(
    name = "ac",
    out = "ac.go",
    interfaces = ["ActionCache"],
    library = "//pkg/ac:go_default_library",
    package = "mock",
)

gomock(
    name = "blobstore",
    out = "blobstore.go",
    interfaces = ["BlobAccess"],
    library = "//pkg/blobstore:go_default_library",
    package = "mock",
)

gomock(
    name = "builder",
    out = "builder.go",
    interfaces = [
        "BuildExecutor",
        "BuildQueue",
        "BuildQueueGetter",
    ],
    library = "//pkg/builder:go_default_library",
    package = "mock",
)

gomock(
    name = "cas",
    out = "cas.go",
    interfaces = ["ContentAddressableStorage"],
    library = "//pkg/cas:go_default_library",
    package = "mock",
)

gomock(
    name = "environment",
    out = "environment.go",
    interfaces = [
        "Environment",
        "Manager",
    ],
    library = "//pkg/environment:go_default_library",
    package = "mock",
)

gomock(
    name = "filesystem",
    out = "filesystem.go",
    interfaces = [
        "Directory",
        "File",
    ],
    library = "//pkg/filesystem:go_default_library",
    package = "mock",
)

gomock(
    name = "remoteexecution",
    out = "remoteexecution.go",
    interfaces = [
        "Execution_ExecuteServer",
        "Execution_WaitExecutionServer",
    ],
    library = "@com_github_bazelbuild_remote_apis//build/bazel/remote/execution/v2:go_default_library",
    package = "mock",
)

go_library(
    name = "go_default_library",
    srcs = [
        ":ac.go",
        ":blobstore.go",
        ":builder.go",
        ":cas.go",
        ":environment.go",
        ":filesystem.go",
        ":remoteexecution.go",
    ],
    importpath = "github.com/EdSchouten/bazel-buildbarn/pkg/mock",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/builder:go_default_library",
        "//pkg/environment:go_default_library",
        "//pkg/filesystem:go_default_library",
        "//pkg/proto/failure:go_default_library",
        "//pkg/util:go_default_library",
        "@com_github_bazelbuild_remote_apis//build/bazel/remote/execution/v2:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@go_googleapis//google/longrunning:longrunning_go_proto",
        "@org_golang_google_grpc//metadata:go_default_library",
    ],
)
